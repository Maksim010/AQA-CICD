name: Test Automation CI

on: workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      selenoid:
        image: aerokube/selenoid
        ports:
          - 4444:4444
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./browsers.json:/etc/selenoid/browsers.json:ro
        env:
          OVERRIDE_HOME: /home/selenoid
        options: >-
          --health-cmd "curl -f http://localhost:4444/status || exit 1"
          --health-interval 5s
          --health-timeout 10s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Selenoid environment
        run: |
          mkdir -p ~/.aerokube/selenoid
          echo '{
            "chrome": {
              "default": "125.0",
              "versions": {
                "125.0": {
                  "image": "selenoid/chrome:125.0",
                  "port": "4444",
                  "path": "/",
                  "env": ["TZ=UTC"],
                  "volumes": ["/tmp:/tmp"]
                }
              }
            }
          }' > browsers.json
          
          docker pull selenoid/chrome:125.0

      - name: Wait for Selenoid
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:4444/status | grep -q '"total":'; then
              echo "Selenoid ready!"
              curl http://localhost:4444/status
              break
            fi
            echo "Waiting for Selenoid (attempt $i)..."
            sleep 3
          done

      - name: Run tests
        run: |
          ./gradlew clean test \
            -Dselenide.remote=http://localhost:4444/wd/hub \
            -Dselenide.browser=chrome \
            -Dselenide.browserVersion=125.0 \
            -Dremote.timeout=90000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            build/reports/tests/test
            build/allure-results

      - name: Setup Allure reporting
        uses: simple-elf/allure-report-action@master  # Используем конкретную стабильную версию
        if: always()
        with:
          gh_pages: gh-pages
          allure_results: build/allure-results
          allure_report: allure-report
          allure_history: allure_history

      - name: Deploy report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          force_orphan: true