name: Test

on: workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      selenoid:
        image: aerokube/selenoid:latest-release
        ports:
          - 4444:4444
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ${{ github.workspace }}/browsers.json:/etc/selenoid/browsers.json:ro
        env:
          OVERRIDE_HOME: /home/selenoid
        options: >-
          --health-start-period 20s
          --health-cmd "curl -f http://localhost:4444/status || exit 1"
          --health-interval 10s
          --health-timeout 30s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          mkdir -p config
          echo '{
            "chrome": {
              "default": "125.0",
              "versions": {
                "125.0": {
                  "image": "selenoid/chrome:125.0",
                  "port": "4444",
                  "path": "/",
                  "env": ["TZ=UTC"],
                  "volumes": ["/tmp:/tmp"],
                  "tmpfs": {"/tmp": "size=512m"}
                }
              }
            }
          }' > config/browsers.json
          
          docker pull selenoid/chrome:125.0
          docker pull selenoid/video-recorder:latest

      - name: Wait for Selenoid
        timeout-minutes: 3
        run: |
          for i in {1..30}; do
            if docker inspect selenoid | grep '"Healthy"'; then
              echo "Selenoid is healthy!"
              curl -v http://localhost:4444/status
              break
            fi
            sleep 5
            echo "Waiting for Selenoid health check (attempt $i/30)..."
          done

      - name: Run tests
        run: |
          ./gradlew clean test \
            -Dselenide.remote=http://localhost:4444/wd/hub \
            -Dselenide.browser=chrome \
            -Dselenide.browserVersion=125.0 \
            -Dremote.timeout=120000

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            build/reports/tests/test
            build/allure-results
            browsers.json

      - uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Setup Allure reporting
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          gh_pages: gh-pages
          allure_results: build/allure-results
          allure_report: allure-report

      - name: Deploy report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          force_orphan: true